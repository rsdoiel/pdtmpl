.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "pdtmpl" "1" "July 9, 2022" "pdtmpl 1.0.0" "User Manual"
.hy
.SH NAME
.PP
pdtmpl - a pandoc preprocessor for JSON and YAML content.
.SH SYNOPSIS
.PP
pdtmpl OPTIONS PANDOC_TEMPLATE_NAME [PANDOC_OPTIONS\&...]
.SH DESCRIPTION
.PP
pdtmpl s is a Pandoc preprocessor.
It reads JSON from standard input and passes that via a temp file into
pandoc where it applies a pandoc template to render to standard out.
.PP
NOTE: If PANDOC_TEMPLATE_NAME is an empty string than the JSON or YAML
read will be processed without using Pandoc\[cq]s
\[lq]\[en]template\[rq] option.
You will need to provide some of Pandoc\[cq]s options after the empty
string placeholder.
See example below.
.SH OPTIONS
.TP
\f[B]-help\f[R]
display usage
.TP
\f[B]-license\f[R]
display license
.TP
\f[B]-version\f[R]
display version
.TP
\f[B]-i FILENAME\f[R]
read JSON or TOML file
.TP
\f[B]-o FILENAME\f[R]
write Pandoc output to file
.SH EXAMPLE
.PP
In this example we have a JSON object document called
\[lq]example.json\[rq] and a Pandoc template called
\[lq]example.tmpl\[rq].
A redirect \f[C]\[dq]<\[dq]\f[R] is used to pipe the content of
\[lq]example.json\[rq] into the command line tool pdtmpl.
.IP
.nf
\f[C]
  pdtmpl example.tmpl < example.json
\f[R]
.fi
.PP
Render example.json as Markdown document.
We need to use Pandoc\[cq]s own options of \[lq]-s\[rq] (stand alone)
and \[lq]-t\[rq] (to tell Pandoc the output format)
.IP
.nf
\f[C]
  pdtmpl \[dq]\[dq] -s -t markdown < example.json
\f[R]
.fi
.PP
Process a \[lq]codemeta.json\[rq] file with \[lq]codemeta-md.tmpl\[rq]
to produce an about page in Markdown via Pandocs template processing
(the \[lq]codemeta-md.tmpl\[rq] is a Pandoc template marked up to
produce Markdown output).
.IP
.nf
\f[C]
  pdtmpl -i codemeta.json -o about.md \[rs]
             codemeta-md.tmpl
\f[R]
.fi
